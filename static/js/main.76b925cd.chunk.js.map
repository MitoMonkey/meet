{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","toggledCollapsed","setState","event","this","props","className","summary","start","dateTime","location","href","htmlLink","target","rel","description","onClick","Component","EventList","events","map","id","Alert","getStyle","border","text","style","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","handleFocus","select","htmlFor","type","onChange","onFocus","display","NumberOfEvents","number","updateListLength","mockData","JSON","parse","stringify","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","getToken","fetch","then","res","json","catch","result","encodeCode","encodeURIComponent","access_token","setItem","removeQuery","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","navigator","onLine","token","url","extractLocations","Set","App","numberOfEvents","locationEvents","mounted","slice","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.76b925cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        collapsed: true\r\n    }\r\n    handleClick = () => {\r\n        let toggledCollapsed = !this.state.collapsed;\r\n        this.setState({\r\n            collapsed: toggledCollapsed\r\n        });\r\n    }\r\n    render() {\r\n        const { event } = this.props;\r\n        return <div className=\"event\">\r\n            <h1 className=\"title\">{event.summary}</h1>\r\n            <p className=\"date\">{event.start.dateTime}</p>\r\n            <p className=\"location\">{event.location}</p>\r\n            {(this.state.collapsed)\r\n              ? null\r\n                : <div className=\"eventExtra\">\r\n                    <a href={event.htmlLink} className=\"link\" target=\"_blank\" rel=\"noreferrer\">See details on google calendar</a>\r\n                    <p className=\"description\">{event.description}</p>\r\n                </div>\r\n            }\r\n            <button className=\"toggleDetails details-btn\" onClick={() => this.handleClick()}>{(this.state.collapsed) ? 'Show details' : 'Hide details'}</button>\r\n        </div>;\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.border = null;\r\n        this.className = '';\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            border: this.border            \r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                {(this.props.text)\r\n                ?<p style={this.getStyle()} className={this.className}>{this.props.text}</p>\r\n                : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.border = '2px solid blue';\r\n        this.className = 'InfoAlert';\r\n    }\r\n}\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.border = '2px solid red';\r\n        this.className = 'ErrorAlert';\r\n    }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert };","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n    \r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We can not find the city you are looking for. Please try another city',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: null\r\n            });\r\n        }\r\n    };        \r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false,\r\n            infoText: null\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n    handleFocus = (event) => {\r\n        event.target.select();\r\n        this.setState({ showSuggestions: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <InfoAlert className=\"InfoAlert\" text={this.state.infoText} />\r\n                <label htmlFor=\"city\">Choose city</label>\r\n                <div className=\"citySearchContainer\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    id=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={this.handleFocus}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li \r\n                            key={suggestion} \r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li key='all' onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n     state = {\r\n        number: 32\r\n    }\r\n    \r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        if (value < 1 || value > 100) {\r\n            this.setState({\r\n                number: value,\r\n                infoText: 'The number needs to be >1 and <100 !',\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                number: value,\r\n                infoText: ''\r\n            });\r\n            this.props.updateListLength(value);\r\n        }\r\n    }; \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NumberOfEvents\">\r\n                <label htmlFor=\"numberInput\">Limit length of event list to:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"numberInput\"\r\n                    id=\"numberInput\"\r\n                    value={this.state.number}\r\n                    // onChange={this.props.updateEvents(undefined, this.state.number)}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n                <ErrorAlert className=\"ErrorAlert\" text={this.state.infoText} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","let mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    }\r\n];\r\nmockData = JSON.parse(JSON.stringify(mockData)); // convert JSON to JS formating\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    \r\n    // Check if accessToken is truthy, then set the value of tokenCheck to the result of `await checkToken(accessToken);`. \r\n    // If accessToken is falsy, set tokenCheck to false\r\n    const tokenCheck = accessToken && (await checkToken(accessToken)); \r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        localStorage.removeItem(\"access_token\"); // removed \"await\"\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://g1ky253yw7.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code); // run `getToken(code)` only if `code` is truthy (meaning it is not undefined), otherwise return \"false\"\r\n    }\r\n    return accessToken;\r\n}\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n    return result;\r\n};\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://g1ky253yw7.execute-api.eu-central-1.amazonaws.com/dev/api/token/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n    access_token && localStorage.setItem(\"access_token\", access_token); // only setItem when access_token is truthy\r\n    return access_token;\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start(); // show progressbar (see also nprogress.css)\r\n\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    // check if the device is online, if it isn't, load data from localStorage\r\n    if (!navigator.onLine) {\r\n        const data = localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        return data ? JSON.parse(data).events : [];\r\n    }\r\n    // if online, get the events from the calender API\r\n    const token = await getAccessToken();\r\n    if (token) {\r\n        removeQuery(); // remove the \"code\" from the URL\r\n        const url = 'https://g1ky253yw7.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data)); // JSON.stringify(events) is necessary because events is a list, but localStorage can only store strings.\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {*} events: // = function takes a single param of any type (*) with the name events\r\n * remove all duplicates by creating another new array using the spread operator (...) and spreading a Set.\r\n */\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? events : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  } \n/*   updateEvents = (location, eventCount) => {\n    getEvents().then((events) => {\n      // let eventsToRender;\n      if (location) {\n        events = (location === 'all') ? events : events.filter((event) => event.location === location);\n        this.setState({\n          events: events\n        });\n      }\n      if (eventCount) {\n        events = (eventCount) ? events.slice(0, eventCount) : events;\n        this.setState({\n          numberOfEvents: eventCount,\n          events: events // PROPLEM: If location is undefined in this instance, but was set previously, it will be reset now\n        });\n      }\n    });\n  } */\n\n  updateListLength = (length) => {\n    //let newEvents = this.state.events.slice(0, length);\n    this.setState({\n        numberOfEvents: length\n      });\n  }\n\ncomponentDidMount() {\n    this.mounted = true; \n    getEvents().then((events) => {\n      if (this.mounted) { // necessary because otherwise the JEST test finishes and unmounts the component before getEvents() is finished and hence the test produces an error\n        // let firstEvents = events.slice(0, this.state.numberOfEvents);\n        this.setState({ events , locations: extractLocations(events) });\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents updateListLength={this.updateListLength} />\n        <EventList events={this.state.events.slice(0, this.state.numberOfEvents)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('dc8eafeabdd840d08c6080b9bd4933b8').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// atatus.notify(new Error('Test Atatus Setup')); // Test error\n"],"sourceRoot":""}